ENTITY_TOUCH_ALL {
	If(not $hadCall){
        CallTrigger(object = $obj2, event = "ENTITY_TOUCH_ALL", obj2 = $obj1, obj1 = $obj2, hadCall = true)
    }
    If(not IsPlayer(entity = $obj2)){
		Return()
	}
	If(IsEntityTouchTop(entity1 = $obj2, entity2 = $obj1)){
		CallTrigger(object = $obj2, event = "ENTITY_TOUCH_TOP", obj2 = $obj1, obj1 = $obj2)
	}ElseIf(IsEntityTouchOn(entity1 = $obj2, entity2 = $obj1)){
		CallTrigger(object = $obj2, event = "ENTITY_TOUCH_ON", obj2 = $obj1, obj1 = $obj2)
	}Else{
		CallTrigger(object = $obj2, event = "ENTITY_TOUCH_AROUND", obj2 = $obj1, obj1 = $obj2)
	}
}

ENTITY_TOUCH_ON{
    $buff = GetEntityTypeBuff(entity = $obj2, key = "fullName", value = "myplugin/squat_buff_break_vector")
    If($buff){
        RemoveEntityBuff(entity = $obj2, buff = $buff)
        If($obj1.hadEmpty){
            Return()
        }
        If(not $obj1.oldPosition){ -- 向下浮动效果
            $obj1.oldPosition = GetEntityPosition(entity = $obj1)
            SetEntityPosition(entity = $obj1, pos = ComputeV3(op = "add", p1 = GetEntityPosition(entity = $obj1), p2 = {x = 0, y = -0.5, z= 0}))
            StartTimer(object = $obj1, event = "REDUCTION_VECTOR_BLOCK", time = 5)
            RideOn(entity = $obj2, target = $obj1)
            CastSkill(skill = "myplugin/blockBeHeave" ,from = $obj1 ,packet = {needPre = true})
        }
        $count = GetEntityEditorVar(entity = $obj1, key = "count")
        If((not $count or 0 == $count) and not $obj1.hadEmpty){
            $obj1.hadEmpty = true
            StartTimer(event = "CHANGE_ACTOR", time = 1, object = $obj1, player = $obj2)
            Return()
        }
        ------------------------------------------------------------ 砸出道具
        $type = GetEntityEditorVar(entity = $obj1, key = "type")
        $fullName = GetEntityEditorVar(entity = $obj1, key = "fullName")
        $index = GetEntityEditorVar(entity = $obj1, key = "index")
        If(not $count)
        {
            SetEntityEditorVar(entity = $obj1, key = "count", value = 0)
        }
        $pos = ComputeV3(op = "add", p1 = GetEntityPosition(entity = $obj1), p2 = {x = 0, y = 1, z= 0})
        $map = GetEntityMap(entity = $obj1)
        If($count and $count >= 1)
        {
            VectorBlockSpaw(pos = $pos, map = $map , block=$obj1, player = $obj2, fullName = $fullName, type = $type, touchOn = true, index = $index)
            SetEntityEditorVar(entity = $obj1, key = "count", value = $count - 1)
        }
        ElseIf($count and $count == 0)
        {
            SetEntityEditorVar(entity = $obj1, key = "count", value = $count - 1)
        }
        $count = GetEntityEditorVar(entity = $obj1, key = "count")
        If((not $count or 0 == $count) and not $obj1.hadEmpty){
            $obj1.hadEmpty = true
            StartTimer(event = "CHANGE_ACTOR", time = 1, object = $obj1, player = $obj2)
            Return()
        }
    }
}

BOOM_BLOCK_BOOM{
    If($obj1.hadEmpty){
        Return()
    }
    $count = GetEntityEditorVar(entity = $obj1, key = "count")
    If((not $count or 0 == $count) and not $obj1.hadEmpty){
        CastSkill(skill = "myplugin/blockJump" ,from = $obj1 ,packet = {needPre = true})
        $obj1.hadEmpty = true
        StartTimer(event = "CHANGE_ACTOR", time = 1, object = $obj1, player = $obj2)
        Return()
    }
    ForLoop(from = 1, to = $count){
        CallTrigger(object = $obj1, event = "ENTITY_TOUCH_TOP", obj2 = $obj2)
    }
}

CHANGE_ACTOR(debug = false){
    --SetGuidePostion(entity = $player, pos = nil)
    ChangeEntityActor(entity = $obj1, name = "object_container_block_brown.actor")
    If(@GUIDE ~= nil and IsValidObject(object = @GUIDE))
	{
        @guideStep = 2
	    @playerStep = 2
        KillEntity(entity = @GUIDE, from = $player)
	}
}

ENTITY_TOUCH_TOP{
    If($obj1.hadEmpty or GetEntityTypeBuff(entity = $obj1, key = "fullName", value = "myplugin/monster_inv_buff")){
        Return()
    }
    If(not $obj1.hadEmpty){
        -- CastSkill(skill = "myplugin/blockIdle" ,from = $obj1 ,packet = {needPre = true})
        CastSkill(skill = "myplugin/blockJump" ,from = $obj1 ,packet = {needPre = true})
    }
    $count = GetEntityEditorVar(entity = $obj1, key = "count")
	$type = GetEntityEditorVar(entity = $obj1, key = "type")
	$fullName = GetEntityEditorVar(entity = $obj1, key = "fullName")
    $index = GetEntityEditorVar(entity = $obj1, key = "index")
	If(not $count)
	{
		SetEntityEditorVar(entity = $obj1, key = "count", value = 0)
	}
    $pos = ComputeV3(op = "add", p1 = GetEntityPosition(entity = $obj1), p2 = {x = 0, y = 1, z= 0})
	$map = GetEntityMap(entity = $obj1)
	If($count and $count >= 1)
	{   
        AddEntityBuff(entity = $obj1, cfg = "myplugin/monster_inv_buff", buffTime = 3)
		VectorBlockSpaw(pos = $pos, map = $map , block=$obj1, player = $obj2, fullName = $fullName, type = $type, touchTop = true, index = $index)
		SetEntityEditorVar(entity = $obj1, key = "count", value = $count - 1)
	}
	ElseIf($count and $count == 0)
	{
		SetEntityEditorVar(entity = $obj1, key = "count", value = $count - 1)
	}	
    $count = GetEntityEditorVar(entity = $obj1, key = "count")
    If((not $count or 0 == $count) and not $obj1.hadEmpty){
        $obj1.hadEmpty = true
        StartTimer(event = "CHANGE_ACTOR", time = 1, object = $obj1, player = $obj2)
        Return()
    }
}

REDUCTION_VECTOR_BLOCK{
    SetEntityPosition(entity = $obj1, pos = $obj1.oldPosition)
    $obj1.oldPosition = nil
}